library(cells) {
    delay_model : table_lookup;
    comment : "";
    date : "$Date: Wed Dec  4 01:01:59 2024 $";
    revision : "1.0";
    capacitive_load_unit (1,pf);
    current_unit : "1mA";
    leakage_power_unit : "1nW";
    pulling_resistance_unit : "1kohm";
    time_unit : "1ns";
    voltage_unit : "1V";
    default_cell_leakage_power : 0;
    default_fanout_load : 1;
    default_inout_pin_cap : 0.005;
    default_input_pin_cap : 0.005;
    default_leakage_power_density : 0;
    default_max_transition : 0.54;
    default_output_pin_cap : 0;
    in_place_swap_mode : match_footprint;
    input_threshold_pct_fall : 50;
    input_threshold_pct_rise : 50;
    nom_process : 1;
    nom_temperature : 25;
    nom_voltage : 0.75;
    output_threshold_pct_fall : 50;
    output_threshold_pct_rise : 50;
    slew_derate_from_library : 0.5;
    slew_lower_threshold_pct_fall : 30;
    slew_lower_threshold_pct_rise : 30;
    slew_upper_threshold_pct_fall : 70;
    slew_upper_threshold_pct_rise : 70;
    voltage_map (VDD, 0.75);
    voltage_map (VSS, 0);
    voltage_map (GND, 0);
    lu_table_template(delay_temp_3x3) {
        variable_1: input_net_transition;
        variable_2: total_output_net_capacitance;
        index_1 ("1.0, 2.0, 3.0");
        index_2 ("1.0, 2.0, 3.0");
    }
    cell (DFF) {
	ff (FF) {
           next_state: "D";
           clocked_on: "CLK";
           clear: "!CLR";
        }
        pin (CLK) {
            direction: input;
            clock: true;
        }
        pin (CLR) {
            direction: input;
        }
        pin (D) {
            direction: input;
        }
        pin (Q) {
            direction: output;
            function: "FF";
        }
        pin (ADR[8]) {
            related_ground_pin : VSS;
            related_power_pin : VDD;
            max_transition : 0.54;
            capacitance : 0.0011416;
      }
    }
    cell (AND2) {
        area : 1;
        pin(a) {
            direction: input;
        }
        pin(b) {
            direction: input;
        }
        pin(o) {
            function : "(A & B)";
            direction: output;
            timing() {
                related_pin: "A";
                timing_sense: positive_unate;
                cell_rise(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
                cell_fall(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
            }
            timing() {
                related_pin: "B";
                timing_sense: positive_unate;
                cell_rise(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
                cell_fall(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
            }
        }
    }
    cell (NAND2) {
        area : 1;
        pin(a) {
            direction: input;
        }
        pin(b) {
            direction: input;
        }
        pin(o) {
            function : "!(A & B)";
            direction: output;
            timing() {
                related_pin: "A";
                timing_sense: negative_unate;
                cell_rise(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
                cell_fall(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
            }
            timing() {
                related_pin: "B";
                timing_sense: negative_unate;
                cell_rise(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
                cell_fall(delay_temp_3x3) {
                    index_1 ("0.5, 1.0, 1.5");
                    index_2 ("10.0, 20.0, 30.0");
                    values ( "0.1, 0.2, 0.3", \
                             "0.11, 0.21, 0.31", \
                             "0.12, 0.22, 0.32" );
                }
            }
        }
    }
}